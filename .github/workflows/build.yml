name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    #------------------------------------------------------------
    # 1. Check out your keyboard-configuration repository
    #    (contains the Nix expressions under  config/ )
    #------------------------------------------------------------
    - uses: actions/checkout@v4
      with:
        submodules: recursive          # keep this â€” you may have other submodules

    #------------------------------------------------------------
    # 2. Retrieve the Combo-Lead module into modules/combos-lead
    #    (depth 1 to keep the checkout minimal)
    #------------------------------------------------------------
    - name: Fetch Combo-Lead module
      run: |
        mkdir -p modules
        git clone --depth 1 \
          https://github.com/haroldhernandez/combos-lead \
          modules/combos-lead

    #------------------------------------------------------------
    # 3. Grab ZMK source (as you already do)
    #------------------------------------------------------------
    - uses: actions/checkout@v4
      with:
        repository: moergo-sc/zmk
        ref: main
        path: src

    #------------------------------------------------------------
    # 4. Set up Nix + cache
    #------------------------------------------------------------
    - uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:nixos-22.05

    - uses: cachix/cachix-action@v14
      with:
        name: moergo-glove80-zmk-dev
        skipPush: true

    #------------------------------------------------------------
    # 5. Build both halves via the existing Nix expression.
    #    ZEPHYR_EXTRA_MODULES tells CMake where the module lives.
    #------------------------------------------------------------
    - name: Build Glove80 combined firmware
      env:
        ZEPHYR_EXTRA_MODULES: ${{ github.workspace }}/modules/combos-lead
      run: nix-build config -o combined

    #------------------------------------------------------------
    # 6. Copy result out of /nix/store and upload it
    #------------------------------------------------------------
    - name: Copy result out of nix store
      run: cp combined/glove80.uf2 glove80.uf2

    - name: Upload result
      uses: actions/upload-artifact@v4
      with:
        name: glove80.uf2
        path: glove80.uf2